name: Deploy a branch to the sequencer VM

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Git branch to deploy on the VM'
        required: true
        default: 'master'

jobs:
  deploy:
    runs-on: ubuntu-latest
    # we need the OIDC token that GitHub issues at runtime
    permissions:
      id-token: write
      contents: read     # so we can fetch the branch name, if you later add checkout
    env:
      PROJECT_ID:  ${{ secrets.GCP_PROJECT_ID       }}   # matterlabs-gpu-sandbox
      ZONE:        ${{ secrets.GCP_ZONE             }}   # us-central1-f
      INSTANCE:    ${{ secrets.GCP_VM_NAME          }}   # rb-zksync-os-server-demo-1
    steps:

      #################################################################
      # 1.  Authenticate to Google Cloud through Workload Identity
      #################################################################
      - name: Authenticate with Workload Identity
        uses: google-github-actions/auth@v2
        with:
          # projects/123456/locations/global/workloadIdentityPools/github/providers/github-oidc
          workload_identity_provider: ${{ secrets.GCP_POOL_PROVIDER }}
          # gh-deployer@matterlabs-gpu-sandbox.iam.gserviceaccount.com
          service_account:            ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      #################################################################
      # 2.  SSH to the VM and do the same steps you normally do manually
      #################################################################
      - name: Deploy branch on VM
        env:
          BRANCH: ${{ github.event.inputs.branch }}
        run: |
          set -eo pipefail
          echo "Deploying branch $BRANCH to $INSTANCE â€¦"
          
          gcloud compute ssh "$INSTANCE" --zone "$ZONE" --project "$PROJECT_ID" --command '
            set -eo pipefail
          
            echo ">>> Checking out code"
            cd zksync-os-server
            git fetch origin
            git checkout "$BRANCH"
            git reset --hard "origin/$BRANCH"
          
            echo ">>> Building docker image"
            sudo docker build -t zksync_os_sequencer .
          
            echo ">>> Restarting container"
            sudo docker rm -f sequencer || true
            sudo docker run -d --name sequencer \
              -p 3050:3050 -p 3124:3124 -p 3312:3312 \
              --network host \
              -e batcher_component_enabled=true \
              -e batcher_num_workers=15 \
              -e sequencer_max_transactions_in_block=40 \
              -e sequencer_block_time_ms=100 \
              -e sequencer_blocks_to_retain_in_memory=256 \
              -v /mnt/localssd/db:/db \
              zksync_os_sequencer
          
            echo "Deployment complete"
          '

      #################################################################
      # 3.  (optional) print the first few log lines so you see it started
      #################################################################
      - name: Tail container startup logs (first 50 lines)
        run: |
          gcloud compute ssh "$INSTANCE" --zone "$ZONE" --project "$PROJECT_ID" --command \
            "sudo docker logs --tail 50 sequencer || true"
